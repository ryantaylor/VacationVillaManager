@model VacationVillaManager.Models.House
@using VacationVillaManager.Models;

@{
    ViewBag.Title = "Create";
}

@Styles.Render("~/Content/BootstrapOverride.css")

<!-- Begin slideshow scaffolding -->

<div id="blueimp-gallery" class="blueimp-gallery">
    <div class="slides"></div>
    <h3 class="title"></h3>
    <a class="prev">‹</a>
    <a class="next">›</a>
    <a class="close">×</a>
    <a class="play-pause"></a>
    <ol class="indicator"></ol>
</div>

<!-- End -->

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <div class="control-group">
        <div class="controls">
            <div class="row-fluid">
                <div class="span2">
                    <h3><a href="@Url.Action("Index")" class="back-button"><i class="icon-circle-arrow-left"></i></a> New House</h3>
                </div>
                <div class="span10 well well-small">
                    <div class="input-prepend">
                        <span class="add-on"><i class="icon-home"></i></span>
                        @Html.TextBoxFor(model => model.Name, new { placeholder = "Name" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="control-group center">
        <div class="controls">
            <div class="row-fluid">
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Contact Information</legend>
                        <div class="btn-group contact-select" data-toggle="buttons-radio">
                            <button type="button" id="btnHome" class="btn">Home</button>
                            <button type="button" id="btnOwner" class="btn">Owner</button>
                            <button type="button" id="btnManagement" class="btn">Management</button>
                        </div>
                        <div class="homeEditor">
                            @Html.EditorFor(model => model.Location)

                            <div class="input-prepend">
                                <span class="add-on"><i class="icon-phone"></i></span>
                                @Html.TextBoxFor(model => model.PhoneNumber, new { placeholder = "Phone Number" })
                            </div>

                            <div class="input-prepend">
                                <span class="add-on"><i class="icon-lock"></i></span>
                                @Html.TextBoxFor(model => model.SecurityCode, new { placeholder = "Door/Security Code" })
                            </div>
                        </div>
                        <div class="ownerEditor" style="display: none;">
                            @Html.EditorFor(model => model.Owner)
                        </div>
                        <div class="managementEditor" style="display: none;">
                            @Html.EditorFor(model => model.ManagementCompany)
                        </div>
                    </fieldset>
                </div>
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Rate Information</legend>
                        <div class="input-prepend input-append">
                            <span class="add-on"><i class="icon-usd"></i></span>
                            @Html.TextBoxFor(model => model.Rate, new { @Value = "", placeholder = "Rate", @class = "input-mini" })
                            <span class="add-on">Per Day</span>
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Costs <a href="javascript:void(0)" class="add-button addNewCost" onclick="@{Model.Costs.Add(new Cost());}"><i class="icon-plus-sign"></i></a></legend>
                        <div class="costEditor">
                            <!-- Generated cost editors go here -->
                        </div>
                    </fieldset>
                </div>
                <div class="span4 well well-small">
                    <div class="legend-mimick">Photos <a href="javascript:void(0)" id="photo-button" class="addNewPhoto"><i class="icon-picture"></i></a></div>
                    <div id="upload-info">
                        <div id="gallery">
                            <ul class="thumbnails">
                                <!-- Image thumbnails go here -->
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row-fluid">
        <div class="span12 well well-small">
            <div class="row-fluid">
                <div class="offset1">
                    <label for="createHouse" class="btn btn-large btn-primary"><i class="icon-plus"></i>  Create</label>
                    <input type="submit" value="Create" id="createHouse" class="hidden" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Styles.Render("~/Scripts/slideshow/css/blueimp-gallery.css")
    @Scripts.Render("~/Scripts/slideshow/js/blueimp-gallery.js")
    @Scripts.Render("~/Scripts/uploader/fileuploader.js")
    @Styles.Render("~/Scripts/uploader/fileuploader.css")

    <script type="text/javascript">
        $(document).ready(function () {

            var id = 0;
            var photoID = 0;
            var buttonActive = 0;

            var qqupload = new qq.FileUploaderBasic({
                button: document.getElementById('photo-button'),
                action: '@Url.Action("PhotoUpload", "Bookings")',
                onUpload: function (id, filename, xhr) {
                    var toAppend = '<li class="span3"><a href="#" class="thumbnail" title="' + filename + '" data-index="' + photoID + '"><img id=photo' + photoID + ' src="/Scripts/uploader/loading.gif" /></a></li>';
                    $('.thumbnails').append(toAppend);
                },
                onComplete: function (id, filename, responseJSON) {
                    @{Model.Photos.Add(new Photo());}
                    var toAppend = '<input type="hidden" name="Photos[' + photoID + '].ID" value="0" />';
                    $('#upload-info').append(toAppend);
                    var toAppend = '<input type="hidden" name="Photos[' + photoID + '].URL" value="' + responseJSON.path + '" />';
                    $('#upload-info').append(toAppend);
                    var toAppend = '<input type="hidden" name="Photos[' + photoID + '].URLThumb" value="' + responseJSON.thumb + '" />';
                    $('#upload-info').append(toAppend);
                    var toAppend = '<input type="hidden" name="Photos[' + photoID + '].Name" value="' + responseJSON.name + '" />';
                    $('#upload-info').append(toAppend);

                    $('#photo' + photoID + '').attr("src", responseJSON.thumb);
                    $('#photo' + photoID + '').parent().attr("href", responseJSON.path);

                    photoID++;
                },
                params: {
                    houseID: '0'
                }
            });

            var links = document.getElementById('gallery').getElementsByTagName('a'),
                options = {
                    // Set to true to initialize the Gallery with carousel specific options:
                    carousel: false
                },
                gallery = blueimp.Gallery(links, options);

            //gallery.close();

            var linksContainer = $('#gallery').on('click', 'a', function (event) {
                // Show the Gallery as lightbox when selecting a link,
                // starting with the selected image:
                if (blueimp.Gallery(linksContainer.find('a'), {
                    index: $(this).data('index')
                })) {
                    // Prevent the default link action on
                    // successful Gallery initialization:
                    event.preventDefault();
                }
                event.preventDefault();
            });

            $('body').on('click', '[id^=freq-toggle-]', function () {
                var label = $(this).find('span');
                var value = $(this).find('input');

                if (value.val() === "false") {
                    value.val("true");
                    label.attr('class', 'label label-success');
                    label.text("Daily");
                }

                else {
                    value.val("false");
                    label.attr('class', 'label label-info');
                    label.text("Once");
                }
            });

            //$('#btnHome').button();
            $('#btnHome').button('toggle');

            $('#btnHome').click(function () {
                if (buttonActive == 1) {
                    $('.ownerEditor').slideUp('default', function () {
                        $('.homeEditor').slideDown();
                        buttonActive = 0;
                    });
                }

                else if (buttonActive == 2) {
                    $('.managementEditor').slideUp('default', function () {
                        $('.homeEditor').slideDown();
                        buttonActive = 0;
                    });
                }
            });

            $('#btnOwner').click(function () {
                if (buttonActive == 0) {
                    $('.homeEditor').slideUp('default', function () {
                        $('.ownerEditor').slideDown();
                        buttonActive = 1;
                    });
                }

                else if (buttonActive == 2) {
                    $('.managementEditor').slideUp('default', function () {
                        $('.ownerEditor').slideDown();
                        buttonActive = 1;
                    });
                }
            });

            $('#btnManagement').click(function () {
                if (buttonActive == 0) {
                    $('.homeEditor').slideUp('default', function () {
                        $('.managementEditor').slideDown();
                        buttonActive = 2;
                    });
                }

                else if (buttonActive == 1) {
                    $('.ownerEditor').slideUp('default', function () {
                        $('.managementEditor').slideDown();
                        buttonActive = 2;
                    });
                }
            });

            $('#photo-button').click(function () {
                $('#upload-input').click();
            });

            $('.addNewCost').click(function () {
                $.ajax({
                    type: "GET",
                    url: "/Houses/_CostEditorWithID/" + id,
                    success: function ($result) {
                        var toInject = $result;
                        $('.costEditor').append(toInject);
                        $('.costEditor').find('.costEditorRow:last').slideDown();
                        $('#' + id + ' .costID').val(0);
                        id++;
                    }
                });
            });

            $('body').on('click', 'a.deleteRow', function () {
                var divId = $(this).parents("div.costEditorRow:first").attr('id');
                
                $(this).parents("div.costEditorRow:first").slideUp('default', function () {
                    $('#' + divId + ' input').val('');
                });
                return false;
            });
        });
    </script>
}
