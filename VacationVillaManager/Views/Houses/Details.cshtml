@model VacationVillaManager.Models.House
@using VacationVillaManager.Models

@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_BootstrapLayout.public.cshtml";
    var firstImg = true;
    var imgClass = "item";
}

<!--=== Breadcrumbs ===-->
<div class="breadcrumbs margin-bottom-60">
	<div class="container">
        <h1 class="pull-left">@Model.Name</h1>
        <ul class="pull-right breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home") <span class="divider">/</span></li>
            <li>@Html.ActionLink("Houses", "All", "Houses") <span class="divider">/</span></li>
            <li class="active">@Model.Name</li>
        </ul>
    </div><!--/container-->
</div><!--/breadcrumbs-->
<!--=== End Breadcrumbs ===-->

<!--=== Content Part ===-->
<div class="container">
    <div class="row-fluid margin-bottom-20">
        <!-- Carousel -->
        <div class="span7">
            <div id="myCarousel" class="carousel slide">
                <div class="carousel-inner house-photo-carousel">
                    @foreach (var photo in Model.Photos)
                    {
                        if (firstImg)
                        {
                            firstImg = false;
                            imgClass = "item active";
                        }

                        else
                        {
                            imgClass = "item";
                        }

                        <div class="@imgClass">
                            <img src="@photo.URL" alt="@photo.Name" />
                            <div class="carousel-caption">
                                <h4>@Model.Name</h4>
                                <p>@photo.Name</p>
                            </div>
                        </div>
                    }
                </div>
                
                <div class="carousel-arrow">
                    <a data-slide="prev" href="#myCarousel" class="left carousel-control"><i class="icon-angle-left"></i></a>
                    <a data-slide="next" href="#myCarousel" class="right carousel-control"><i class="icon-angle-right"></i></a>
                </div>
            </div>
        </div>
        <!-- //End Carousel -->

        <div class="span5">
        	<h3>@Model.Name</h3>
            <p>Description here at vero eos et accusamus et iusto odio dignissimos <a href="#">ducimus qui blanditiis</a> praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum Fusce condimentum eleifend enim a feugiat. Pellentesque viverra vehicula sem ut volutpat. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut non libero magna. Sed et quam lacus.</p>
                        
            <!-- Testimonial Block -->
            <blockquote class="hero">
                <p>Amazing Villa! I loved it! Would definitely recommend, and will be returning soon!</p>
                <small>Excited Villa Guest</small>
            </blockquote>
	        <!--//End Testimonial Block -->
            <p><a class="btn-u btn-u-large" href="#">BOOKING INQUIRY</a></p>
        </div>
    </div>

    <!-- Pricing -->
    <div class="row-fluid margin-bottom-40">
        <div class="span3 pricing hover-effect">
            <div class="pricing-head">
                <h3>Pricing <span>@Model.Name</span></h3>
                <h4><i>$</i>@Model.Rate <i>/night</i></h4>
            </div>
            <ul class="pricing-content unstyled">
                @foreach (var cost in Model.Costs)
                {
                    var frequency = "";
                    if (cost.CalculateDaily)
                    {
                        frequency = "per day";
                    }
                    else
                    {
                        frequency = "per booking";
                    }
                    
                    <li><i class="icon-star"></i> @cost.Name - $@cost.Amount @frequency</li>
                }
            </ul>
            <div class="pricing-footer">
                <p>Prices listed subject to change, and do not include 12% Florida sales tax.</p>
                <button type="submit">Order Now</button>
            </div>
        </div>
        <div id="availability" class="span6">
            <div class="headline"><h3>Availability</h3></div>
            <div class="bx-wrapper">
                <div class="bx-controls-direction">
                    <a id="calendar-prev" class="bx-prev" href="#"></a>
                    <a id="calendar-next" class="bx-next" href="#"></a>
                </div>
            </div>
        </div>
        <div id="location" class="span3">
            <div class="headline"><h3>Location</h3></div>
            <div id="map" class="map map-box map-box-space"></div><!---/map-->
        </div>
    </div>
</div>

<!--@Html.Partial("_SendInquiry", new Inquiry())-->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/jquery-ui.css")
    @Styles.Render("~/Content/themes/base/jquery.ui.datepicker.calendar.css")
    @Styles.Render("~/Content/unity/plugins/bxslider/jquery.bxslider.css")
    @Scripts.Render("http://maps.google.com/maps/api/js?sensor=true")
    @Scripts.Render("~/Content/unity/plugins/gmap/gmap.js")

    <script type="text/javascript">
        $(document).ready(function () {

            var map;
            var address = '@Model.Location.Address @Model.Location.City @Model.Location.Region';
            var displayYear = parseInt('@System.DateTime.Now.Year');
            var bookings = [];
            var bookingsRaw = @Html.Raw(Json.Encode(ViewData["Bookings"]))

            $.each(bookingsRaw, function (index, booking) {
                var firstSplit = booking.StartDate.split("(");
                var temp = firstSplit[1];
                var secondSplit = temp.split(")");
                var startMilli = secondSplit[0];
                var startDate = new Date();
                startDate.setTime(startMilli);
                
                var firstSplit = booking.EndDate.split("(");
                var temp = firstSplit[1];
                var secondSplit = temp.split(")");
                var endMilli = secondSplit[0];
                var endDate = new Date();
                endDate.setTime(endMilli);

                var entry = [startDate, endDate];
                bookings.push(entry);
            });

            $('#availability').datepicker({
                numberOfMonths: [3,4],
                dayNamesMin: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
                beforeShowDay: showBooking,
                defaultDate: '01/01/' + displayYear
            });

            $('#availability').css({ fontSize: '7.5px' });

            $('#calendar-prev').click(function (e) {
                e.preventDefault();
                displayYear--;
                $('#availability').datepicker("setDate", "01/01/" + displayYear);
            });

            $('#calendar-next').click(function (e) {
                e.preventDefault();
                displayYear++;
                $('#availability').datepicker("setDate", "01/01/" + displayYear);
            });

            map = new GMaps({
                div: '#map'
            });

            GMaps.geocode({
                address: address,
                callback: function (results, status) {
                    if (status == 'OK') {
                        var latlng = results[0].geometry.location;
                        map.setCenter(latlng.lat(), latlng.lng());

                        map.AddMarker({
                            lat: latlng.lat(),
                            lng: latlng.lng(),
                            title: '@Model.Name'
                        });
                    }
                }
            });

            function showBooking(date) {
                //alert(bookings[3][0] + " " + bookings[3][0].getUTCDate() + " " + bookings[3][0].getUTCMonth() + " " + bookings[3][0].getUTCFullYear());
                //alert(date + " " + date.getDate() + " " + date.getMonth() + " " + date.getFullYear());
                for (var i = 0; i < bookings.length; i++) {
                    if (compareDates(bookings[i][0], date) == 0) {
                        for (var j = 0; j < bookings.length; j++) {
                            if (bookings[i][0].getTime() == bookings[j][1].getTime() && i != j) {
                                return [true, 'active-booking'];
                            }
                        }
                        return [true, 'start-booking'];
                    }
                    else if (compareDates(bookings[i][1], date) == 0) {
                        for (var j = 0; j < bookings.length; j++) {
                            if (bookings[i][1].getTime() == bookings[j][0].getTime() && i != j) {
                                return [true, 'active-booking'];
                            }
                        }
                        return [true, 'end-booking'];
                    }
                    else if (compareDates(bookings[i][0], date) < 0 && compareDates(bookings[i][1], date) > 0) {
                        //alert(date + " " + date.getTime());
                        //alert(bookings[i][0] + " " + bookings[i][0].getTime());
                        return [true, 'active-booking'];
                    }
                }
                return [true, ''];
            }

            // server dates stored in GMT, local dates given in local timezone
            // 0  = equal
            // -1 = serverDate < localDate
            // 1  = serverDate > localDate
            function compareDates(serverDate, localDate) {
                if (serverDate.getUTCDate() == localDate.getDate() && serverDate.getUTCMonth() == localDate.getMonth() && serverDate.getUTCFullYear() == localDate.getFullYear()) {
                    return 0;
                }
                else if (serverDate.getUTCFullYear() < localDate.getFullYear() || (serverDate.getUTCMonth() < localDate.getMonth() && serverDate.getUTCFullYear() == localDate.getFullYear()) ||
                         (serverDate.getUTCDate() < localDate.getDate() && serverDate.getUTCMonth() == localDate.getMonth() && serverDate.getUTCFullYear() == localDate.getFullYear())) {
                    return -1;
                }
                else {
                    return 1;
                }
            }
        });
    </script>
}