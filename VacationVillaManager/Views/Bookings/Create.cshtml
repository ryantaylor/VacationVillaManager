@model VacationVillaManager.Models.Booking

@{
    ViewBag.Title = "Create";
    //var testVal = @Html.Raw(Json.Encode(ViewData["HousesList"]));
}

@Styles.Render("~/Content/BootstrapOverride.css")

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span3">
            <h3><a href="@Url.Action("Index")" class="back-button"><i class="icon-circle-arrow-left"></i></a> New Booking</h3>
        </div>
        <div class="span9 booking-info alert alert-block alert-info">
            <div class="row-fluid">
                <div class="span4" style="margin-bottom: -8px;">
                    <i class="icon-home icon-large"></i> <strong class="red"> <a href="#" id="house-editable">No house selected</a></strong>
                </div>
                <div class="span4" style="margin-bottom: -8px;">
                    <i class="icon-usd icon-large"></i> <strong class="red">No house selected</strong>
                </div>
                <div class="span4" style="margin-bottom: -8px;">
                    <i class="icon-calendar icon-large"></i> <strong class="red"> <a href="#" id="date-editable" class="editable editable-click">No dates selected</a></strong>
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.House.ID, new { id = "houseID" })
    @Html.HiddenFor(model => model.StartDate, new { id = "startDate" })
    @Html.HiddenFor(model => model.EndDate, new { id = "endDate" })
    
    <div class="control-group center">
        <div class="controls">
            <div class="row-fluid">
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Client Information</legend>
                        <ul class="nav nav-tabs" id="clientTabs">
                            <li><a href="#new" data-toggle="tab">New Client</a></li>
                            <li class="dropdown">
                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">Returning Client <b class="caret"></b></a>
                                <ul id="client-dropdown" class="dropdown-menu" role="menu" aria-labelledby="dLabel">

                                </ul>
                            </li>
                        </ul>

                        <div class="newClient tab-contents">
                            <div class="clientInfoEditor">
                                @Html.EditorFor(model => model.Client)
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Booking Information</legend>
                    </fieldset>
                </div>
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Other</legend>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>

        <table>
            <tr>
                <td>@Html.RadioButton("clientSelect", 0, true, new { id = "radioReturnClient" }) Returning Client</td>
                <td>@Html.DropDownList("clientList", (IEnumerable<SelectListItem>)ViewData["ClientsList"], new { id = "clientList" })</td>
            </tr>
            <tr>
                <td>@Html.RadioButton("clientSelect", 1, false, new { id = "radioNewClient" }) New Client</td>
            </tr>
        </table>

        <div class="clientInfo">
            <!-- Generated client editor goes here -->
        </div>

        <table>
            @Html.HiddenFor(model => model.House.Location)
            <tr>
                <td>@Html.LabelFor(model => model.NumAdults)</td>
                <td>@Html.EditorFor(model => model.NumAdults)</td>
                <td>@Html.ValidationMessageFor(model => model.NumAdults)</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.NumChildren)</td>
                <td>@Html.EditorFor(model => model.NumChildren)</td>
                <td>@Html.ValidationMessageFor(model => model.NumChildren)</td>
            </tr>
        </table>

        <div class="editor-label">
            @Html.LabelFor(model => model.Costs)
        </div>

        <div class="costEditor">
            <!-- Generated cost editors go here -->
        </div>

        <a href="javascript:void()" class="addNewCost" >Add</a>

        <p>
            <input type="submit" value="Create" />
        </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/Scripts/daterangepicker/daterangepicker.js")
    @Styles.Render("~/Scripts/daterangepicker/daterangepicker.css")
    @Scripts.Render("~/Scripts/daterangepicker/moment.js")
    @Scripts.Render("~/Scripts/editable/js/bootstrap-editable.js")
    @Styles.Render("~/Scripts/editable/css/bootstrap-editable.css")

    <script type="text/javascript">
        $(document).ready(function () {

            var housesXeditable = [];
            var json = "";
            
            var houseList = @Html.Raw(Json.Encode(ViewData["HousesList"]))
            
            $.each(houseList, function (index, house) {
                var houseInfo = {
                    value: house.Value,
                    text: house.Text
                }
                housesXeditable.push(houseInfo);
            });

            json = JSON.stringify(housesXeditable);

            var clientList = @Html.Raw(Json.Encode(ViewData["ClientsList"]))

            $.each(clientList, function (index, client) {
                var toAppend = '<li><a id="client-' + client.Value + '" href="#" data-toggle="tab">' + client.Text + '</a></li>';
                $('#client-dropdown').append(toAppend);
            });

            $('#clientTabs a[href="#new"]').tab('show');

            $.datepicker.setDefaults({
                dateFormat: "M dd yy",
                showOn: "focus"
            });

            //$.fn.editable.defaults.mode = 'inline';

            $('#date-editable').daterangepicker({

            },
            function (start, end) {
                if (start == null || end == null) {
                    $('#date-editable').text("No dates selected");
                    $('#startDate').val("");
                    $('#endDate').val("");
                }
                else {
                    $('#date-editable').text(start.format('MMM D, YYYY') + " - " + end.format('MMM D, YYYY'));
                    $('#startDate').val(start.format('DD/MM/YYYY'));
                    $('#endDate').val(end.format('DD/MM/YYYY'));
                }
            });

            $('#house-editable').editable({
                type: 'select',
                value: 0,
                source: json,
                title: 'Select house',
                success: function (response, newValue) {
                    $('#houseID').val(newValue);
                }
            });

            /*$('#date-editable').editable({
                type: 'text',
                title: 'Select dates',
                inputclass: 'daterange'
            });*/

            $('.date').datepicker();

            $('.addNewCost').hide();

            var id = -1;

            $('.addNewCost').click(function () {
                id++;
                $.ajax({
                    type: "GET",
                    url: "/Houses/_CostEditorWithID/" + id,
                    success: function ($result) {
                        var toInject = $result;
                        $('.costEditor').append(toInject);
                        $('#' + id + ' .costID').val(0);
                    }
                });
            });

            $("a.deleteRow").live("click", function () {
                //$(this).parents("div.costEditorRow:first").remove();
                var divId = $(this).closest('div').attr('id');
                $('#' + divId + ' input').val('');
                $(this).parents("div.costEditorRow:first").hide();
                return false;
            });

            $('#radioReturnClient').click(function () {
                $('div').remove('.clientInfoEditor');
                $('#clientList').removeAttr('disabled');
                var clientID = $('#clientList').val();
                if (clientID != "") {
                    $.ajax({
                        type: "GET",
                        url: "/Bookings/_ClientEditor/" + clientID,
                        success: function ($result) {
                            var toInject = $result;
                            $('.clientInfo').hide().append(toInject).slideDown();
                        }
                    });
                }
            });

            $('#radioNewClient').click(function () {
                $('div').remove('.clientInfoEditor');
                $('#clientList').attr('disabled', 'disabled');
                $.ajax({
                    type: "GET",
                    url: "/Bookings/_ClientEditor/0",
                    success: function ($result) {
                        var toInject = $result;
                        $('.clientInfo').hide().append(toInject).slideDown();
                    }
                });
            });

            $('#clientList').change(function () {
                $('div').remove('.clientInfoEditor');
                var clientID = $('#clientList').val();
                if (clientID != "") {
                    $.ajax({
                        type: "GET",
                        url: "/Bookings/_ClientEditor/" + clientID,
                        success: function ($result) {
                            var toInject = $result;
                            $('.clientInfo').hide().append(toInject).slideDown();
                        }
                    });
                }
            });

            $('#housesList').change(function () {

                $('.addNewCost').hide();
                $('.costEditorRow input').val('');
                $('div[class="costEditorRow"]').hide();

                var houseID = $('#housesList').val();
                if (houseID != "") {

                    $.ajax({
                        type: "GET",
                        url: "/Bookings/GetRate/" + houseID,
                        success: function ($result) {
                            $('#rateBox').val($result);
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/Bookings/GetCosts/" + houseID,
                        success: function ($result) {

                            var currentPos = id;
                            var endPos = id + $result.Costs.length;
                            $.each($result.Costs, function (index, cost) {
                                id++;
                                $.ajax({
                                    type: "GET",
                                    url: "/Houses/_CostEditorWithID/" + id,
                                    async: false,
                                    success: function ($result2) {
                                        var toInject = $result2;
                                        $('.costEditor').hide().append(toInject).slideDown();

                                        currentPos++;

                                        $('#' + currentPos + ' .costName').val(cost.Name);
                                        $('#' + currentPos + ' .costAmount').val(cost.Amount);
                                        $('#' + currentPos + ' .costID').val(0);

                                        if (currentPos >= endPos) {
                                            $('.addNewCost').show();
                                        }
                                    }
                                });
                            });
                        }
                    });
                }
                else {
                    $('#rateBox').val('0');
                }
            });
        });
    </script>
}
