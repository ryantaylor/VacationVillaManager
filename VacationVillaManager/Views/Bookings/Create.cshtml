@model VacationVillaManager.Models.Booking

@{
    ViewBag.Title = "Create";
    //var testVal = @Html.Raw(Json.Encode(ViewData["HousesList"]));
}

@Styles.Render("~/Content/BootstrapOverride.css")

@using (Html.BeginForm("Create", "Bookings", FormMethod.Post, new { autocomplete = "off" })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)

    <div class="row-fluid">
        <div class="span3">
            <h3><a href="@Url.Action("Index")" class="back-button"><i class="icon-circle-arrow-left"></i></a> New Booking</h3>
        </div>
        <div class="span9 booking-info alert alert-block alert-info">
            <div class="row-fluid">
                <div class="span4" style="margin-bottom: -8px;">
                    <i class="icon-home icon-large"></i> <strong class="red"> <a href="#" id="house-editable">No house selected</a></strong>
                </div>
                <div class="span4" style="margin-bottom: -8px;">
                    <i class="icon-usd icon-large"></i> <strong class="red" id="total-cost">No house selected</strong>
                </div>
                <div class="span4" style="margin-bottom: -8px;">
                    <i class="icon-calendar icon-large"></i> <strong class="red"> <a href="#" id="date-editable" class="editable editable-click">No dates selected</a></strong>
                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.House.ID, new { id = "houseID" })
    @Html.HiddenFor(model => model.StartDate, new { id = "startDate", @Value = "" })
    @Html.HiddenFor(model => model.EndDate, new { id = "endDate", @Value = "" })
    @Html.HiddenFor(model => model.Subtotal, new { id = "subtotal" })
    
    <div class="control-group center">
        <div class="controls">
            <div class="row-fluid">
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Client Information</legend>
                        <ul class="nav nav-tabs" id="clientTabs">
                            <li><a href="#new" data-toggle="tab">New Client</a></li>
                            <li class="dropdown">
                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">Returning Client <b class="caret"></b></a>
                                <ul id="client-dropdown" class="dropdown-menu" role="menu" aria-labelledby="dLabel">
                                    <!-- Client dropdown items go here -->
                                </ul>
                            </li>
                        </ul>

                        <div class="newClient tab-contents">
                            @Html.HiddenFor(model => model.Client.ID, new { id = "clientID", @Value = "0" })
                            <div class="clientInfoEditor">
                                @Html.EditorFor(model => model.Client)
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Booking Information</legend>
                        <div id="booking-info" style="display: none;">
                            <div class="input-prepend input-append">
                                <span class="add-on"><i class="icon-user"></i></span>
                                @Html.TextBoxFor(model => model.NumAdults, new { @class = "input-mini", @Value = "", placeholder = "Num. of" })
                                <span class="add-on" style="padding-left: 12px; padding-right: 12px;">Adult(s)</span>
                            </div><br />
                            <div class="input-prepend input-append">
                                <span class="add-on"><i class="icon-user"></i></span>
                                @Html.TextBoxFor(model => model.NumChildren, new { @class = "input-mini", @Value = "", placeholder = "Num. of" })
                                <span class="add-on">Child(ren)</span>
                            </div><br />
                            <hr style="border-bottom: 1px solid #e5e5e5; border-top: 0; margin-top: 10px;" />
                            <div class="input-prepend input-append">
                                <span class="add-on"><i class="icon-usd"></i></span>
                                @Html.TextBoxFor(model => model.Rate, new { id = "rateBox", @class = "input-mini", @Value = "", placeholder = "Rate" })
                                <span class="add-on">Per Day</span>
                            </div>
                            <div class="costEditor">
                                <!-- Generated cost editors go here -->
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Other</legend>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row-fluid">
        <div class="span12 well well-small">
            <div class="row-fluid">
                <div class="offset1">
                    <label for="createBooking" class="btn btn-large btn-primary"><i class="icon-plus"></i>  Create</label>
                    <input type="submit" value="Create" id="createBooking" class="hidden" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/Scripts/daterangepicker/daterangepicker.js")
    @Styles.Render("~/Scripts/daterangepicker/daterangepicker.css")
    @Scripts.Render("~/Scripts/daterangepicker/moment.js")
    @Scripts.Render("~/Scripts/editable/js/bootstrap-editable.js")
    @Styles.Render("~/Scripts/editable/css/bootstrap-editable.css")

    <script type="text/javascript">
        $(document).ready(function () {

            var housesXeditable = [];
            var json = "";
            
            var houseList = @Html.Raw(Json.Encode(ViewData["HousesList"]))
            
            $.each(houseList, function (index, house) {
                var houseInfo = {
                    value: house.Value,
                    text: house.Text
                }
                housesXeditable.push(houseInfo);
            });

            json = JSON.stringify(housesXeditable);

            var clientList = @Html.Raw(Json.Encode(ViewData["ClientsList"]))

            $.each(clientList, function (index, client) {
                var toAppend = '<li><a id="client-' + client.Value + '" href="#" data-toggle="tab">' + client.Text + '</a></li>';
                $('#client-dropdown').append(toAppend);
            });

            $('#clientTabs a[href="#new"]').tab('show');

            //$.fn.editable.defaults.mode = 'inline';

            $('#date-editable').daterangepicker({
                // options here
            },
            function (start, end) {
                if (start == null || end == null) {
                    $('#date-editable').text("No dates selected");
                    $('#startDate').val("");
                    $('#endDate').val("");
                }
                else {
                    $('#date-editable').text(start.format('MMM D, YYYY') + " - " + end.format('MMM D, YYYY'));
                    $('#startDate').val(start.format('MM/DD/YYYY'));
                    $('#endDate').val(end.format('MM/DD/YYYY'));
                    updateCostTotal();
                }
            });

            $('body').on('click', '[id^=freq-toggle-]', function () {
                var label = $(this).find('span');
                var value = $(this).find('input');

                if (value.val() === "false") {
                    value.val("true");
                    label.attr('class', 'label label-success');
                    label.text("Daily");
                }

                else {
                    value.val("false");
                    label.attr('class', 'label label-info');
                    label.text("Once");
                }

                updateCostTotal();
            });

            var id = 0;

            $('#house-editable').editable({
                type: 'select',
                value: 0,
                source: json,
                title: 'Select house',
                success: function (response, newValue) {

                    if ($('#houseID').val() == 0) {
                        $('#booking-info').slideDown();
                        updateCosts(newValue);
                    }

                    else {
                        $('#booking-info').slideUp('default', function () {
                            $('.addNewCost').hide();
                            $('.costEditorRow').remove();

                            updateCosts(newValue);

                            if (newValue != 0)
                                $('#booking-info').slideDown();
                        });
                    }

                    
                }
            });

            function updateCosts(house) {

                if (house != 0) {

                    id = 0;

                    $.ajax({
                        type: "GET",
                        url: "/Bookings/GetRate/" + house,
                        success: function ($result) {
                            $('#rateBox').val($result);
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/Bookings/GetCosts/" + house,
                        success: function ($result) {
                            $.each($result.Costs, function (index, cost) {
                                $.ajax({
                                    type: "GET",
                                    url: "/Bookings/_CostEditorWithID/" + id,
                                    async: false,
                                    success: function ($result2) {
                                        var toInject = $result2;
                                        $('.costEditor').append(toInject);
                                        $('.costEditor').find('.costEditorRow:last').slideDown();

                                        $('#' + id + ' .costName').val(cost.Name);
                                        $('#' + id + ' .costAmount').val(cost.Amount);
                                        $('#' + id + ' .freq-id').val(cost.CalculateDaily);
                                        $('#' + id + ' .costID').val(0);
                                        
                                        if ($('#' + id + ' .freq-id').val().toLowerCase() == "true") {
                                            var span = $('#' + id + '').find('.freq-toggle').find('span');
                                            span.attr('class', 'label label-success');
                                            span.text('Daily');
                                        }
                                        id++;
                                        updateCostTotal();
                                    }
                                });
                            });
                        }
                    });
                }
                $('#houseID').val(house);
                $('.addNewCost').show();
                updateCostTotal();
            }

            /*$('#house-editable').editable({
                type: 'select',
                value: 0,
                source: json,
                title: 'Select house',
                success: function (response, newValue) {

                    if ($('#houseID').val() == 0) {
                        $('#booking-info').slideDown();
                    }

                    else {
                        $('#booking-info').slideUp('default', function () {
                            $('.addNewCost').hide();
                            $('.costEditorRow .costName').val('');
                            $('.costEditorRow .costAmount').val('');
                            $('.costEditorRow .costID').val(0);
                            $('div[class="costEditorRow"]').hide();

                            if (newValue != 0)
                                $('#booking-info').slideDown();
                        });
                    }

                    if (newValue != 0) {

                        $.ajax({
                            type: "GET",
                            url: "/Bookings/GetRate/" + newValue,
                            success: function ($result) {
                                $('#rateBox').val($result);
                            }
                        });

                        $.ajax({
                            type: "GET",
                            url: "/Bookings/GetCosts/" + newValue,
                            success: function ($result) {

                                var currentPos = id;
                                var endPos = id + $result.Costs.length;
                                $.each($result.Costs, function (index, cost) {
                                    id++;
                                    $.ajax({
                                        type: "GET",
                                        url: "/Bookings/_CostEditorWithID/" + id,
                                        async: false,
                                        success: function ($result2) {
                                            var toInject = $result2;
                                            $('.costEditor').append(toInject);
                                            $('.costEditor').find('.costEditorRow:last').slideDown();

                                            currentPos++;

                                            $('#' + currentPos + ' .costName').val(cost.Name);
                                            $('#' + currentPos + ' .costAmount').val(cost.Amount);
                                            $('#' + currentPos + ' .costID').val(0);

                                            if ($('#' + currentPos + ' .freq-id').val() == "true") {
                                                var span = $('#' + currentPos + '').find('.freq-toggle').find('span');
                                                span.attr('class', 'label label-success');
                                                span.text('Daily');
                                            }

                                            updateCostTotal();

                                            if (currentPos >= endPos) {
                                                $('.addNewCost').show();
                                            }
                                        }
                                    });
                                });
                            }
                        });
                    }
                    $('#houseID').val(newValue);
                    updateCostTotal();
                }
            });*/

            /*$('#date-editable').editable({
                type: 'text',
                title: 'Select dates',
                inputclass: 'daterange'
            });*/

            $('#rateBox').change(function () {
                updateCostTotal();
            });

            $('body').on('change', '.costAmount', function () {
                updateCostTotal();
            });

            $('.addNewCost').click(function () {
                id++;
                $.ajax({
                    type: "GET",
                    url: "/Houses/_CostEditorWithID/" + id,
                    success: function ($result) {
                        var toInject = $result;
                        $('.costEditor').append(toInject);
                        $('.costEditor').find('.costEditorRow:last').slideDown();
                        $('#' + id + ' .costID').val(0);
                    }
                });
            });

            $('body').on('click', 'a.deleteRow', function () {
                var divId = $(this).parents("div.costEditorRow:first").attr('id');

                $(this).parents("div.costEditorRow:first").slideUp('default', function () {
                    $('#' + divId + ' .costName').val('');
                    $('#' + divId + ' .costAmount').val(0);
                    $('#' + divId + ' .costID').val(0);
                    updateCostTotal();
                });
                return false;
            });

            $('#clientTabs a[href="#new"]').click(function () {
                $('.clientInfoEditor').slideUp('fast', function () {
                    $('div').remove('.clientInfoEditor');
                    $.ajax({
                        type: "GET",
                        url: "/Bookings/_ClientEditor/0",
                        success: function ($result) {
                            var toInject = $result;
                            $('.newClient').append(toInject);
                            $('.clientInfoEditor').slideDown();
                            $('#clientID').val(0);
                        }
                    });
                });
            });

            $('#client-dropdown').on('click', 'a', function () {
                var elId = $(this).attr('id').split("-");
                var clientID = elId[1];

                $('.clientInfoEditor').slideUp('fast', function () {
                    $('div').remove('.clientInfoEditor');
                    $.ajax({
                        type: "GET",
                        url: "/Bookings/_ClientEditor/" + clientID,
                        success: function ($result) {
                            var toInject = $result;
                            $('.newClient').append(toInject);
                            $('.clientInfoEditor').slideDown();
                            $('#clientID').val(clientID);
                        }
                    });
                });
            });

            function updateCostTotal() {

                var elem = $('#total-cost');

                if ($('#houseID').val() == 0)
                    elem.text('No house selected');

                else if ($('#startDate').val() == '' || $('#endDate').val() == '')
                    elem.text('No valid dates selected');

                else {
                    var cost = 0;
                    var start = Date.parse($('#startDate').val());
                    var end = Date.parse($('#endDate').val());

                    // uncomment this line for local testing
                    //var length = Math.round((end - start) / 1000 / 60 / 60 / 24 / 30) + 1;

                    // uncomment this line for deployment testing
                    var length = Math.round((end - start) / 1000 / 60 / 60 / 24);
                    
                    var rate = parseInt($('#rateBox').val());
                    cost = rate * length;

                    $('.costEditor').children('div .costEditorRow').each(function () {
                        var expense = parseInt($(this).find('.costAmount').val());
                        var daily = $(this).find('.freq-id').val();

                        if (daily === "true")
                            expense = expense * length;

                        cost += expense;
                    });

                    $('#subtotal').val(cost);

                    var withTaxes = cost + cost * 0.12;
                    elem.text(cost.toFixed(2) + ' (' + withTaxes.toFixed(2) + ')');
                }
            }

            /*$("a.deleteRow").live("click", function () {
                //$(this).parents("div.costEditorRow:first").remove();
                var divId = $(this).closest('div').attr('id');
                $('#' + divId + ' input').val('');
                $(this).parents("div.costEditorRow:first").hide();
                return false;
            });*/

            /*$('#housesList').change(function () {

                $('.addNewCost').hide();
                $('.costEditorRow input').val('');
                $('div[class="costEditorRow"]').hide();

                var houseID = $('#housesList').val();
                if (houseID != "") {

                    $.ajax({
                        type: "GET",
                        url: "/Bookings/GetRate/" + houseID,
                        success: function ($result) {
                            $('#rateBox').val($result);
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/Bookings/GetCosts/" + houseID,
                        success: function ($result) {

                            var currentPos = id;
                            var endPos = id + $result.Costs.length;
                            $.each($result.Costs, function (index, cost) {
                                id++;
                                $.ajax({
                                    type: "GET",
                                    url: "/Houses/_CostEditorWithID/" + id,
                                    async: false,
                                    success: function ($result2) {
                                        var toInject = $result2;
                                        $('.costEditor').hide().append(toInject).slideDown();

                                        currentPos++;

                                        $('#' + currentPos + ' .costName').val(cost.Name);
                                        $('#' + currentPos + ' .costAmount').val(cost.Amount);
                                        $('#' + currentPos + ' .costID').val(0);

                                        if (currentPos >= endPos) {
                                            $('.addNewCost').show();
                                        }
                                    }
                                });
                            });
                        }
                    });
                }
                else {
                    $('#rateBox').val('0');
                }
            });*/
        });
    </script>
}
