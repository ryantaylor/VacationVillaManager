@model VacationVillaManager.Models.Special
@using VacationVillaManager.Models

@{
    ViewBag.Title = "Edit";
}

@Styles.Render("~/Content/BootstrapOverride.css")

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span3">
            <h3><a href="@Url.Action("Index")" class="back-button"><i class="icon-circle-arrow-left"></i></a> Edit Special</h3>
        </div>
    </div>

    @Html.HiddenFor(model => model.ID, new { @class = "specialID" })
    @Html.HiddenFor(model => model.House.ID)
    @Html.HiddenFor(model => model.StartDate, new { id = "startDate" })
    @Html.HiddenFor(model => model.EndDate, new { id = "endDate" })

    <div class="control-group center">
        <div class="controls">
            <div class="row-fluid">
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>House</legend>
                        <div class="input-prepend">
                            <span class="add-on"><i class="icon-home"></i></span>
                            @Html.TextBoxFor(model => model.House.Name, new { disabled = "disabled" })
                        </div>
                    </fieldset>
                </div>
                <div class="span4 well well-small">
                    <fieldset>
                        <legend>Details</legend>
                        <div class="input-prepend">
                            <span class="add-on"><i class="icon-calendar"></i></span>
                            @Html.TextBox("DateRange", @Model.StartDate.ToString("MMM dd yyyy") + " - " + @Model.EndDate.ToString("MMM dd yyyy"), new { id = "date-range", placeholder = "Specify a date range" })
                        </div>
                        <div id="special-info">
                            <hr style="border-bottom: 1px solid #e5e5e5; border-top: 0; margin-top: 10px;" />
                            <div class="input-prepend input-append">
                                <span class="add-on"><i class="icon-usd"></i></span>
                                @Html.TextBoxFor(model => model.Rate, new { id = "rateBox", @class = "input-mini", placeholder = "Rate" })
                                <span class="add-on">Per Day</span>
                            </div>
                            <div class="costEditor">
                                <!-- Generated cost editors go here -->
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row-fluid">
        <div class="span8 well well-small">
            <div class="row-fluid">
                <div class="offset1">
                    <label for="editSpecial" class="btn btn-large btn-primary"><i class="icon-ok"></i>  Save</label>
                    <input type="submit" value="Create" id="editSpecial" class="hidden" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/Scripts/daterangepicker/daterangepicker.js")
    @Styles.Render("~/Scripts/daterangepicker/daterangepicker.css")
    @Scripts.Render("~/Scripts/daterangepicker/moment.js")

    <script type="text/javascript">
        $(document).ready(function () {

            var specialID = $('.specialID').val();
            var id = 0;
            var start = '@Model.StartDate.ToString("MMM dd yyyy")';
            var end = '@Model.EndDate.ToString("MMM dd yyyy")';

            $('#date-range').daterangepicker({
                format: 'MMM DD YYYY',
                startDate: start,
                endDate: end
            },
            function (start, end) {
                if (start == null || end == null) {
                    $('#startDate').val("");
                    $('#endDate').val("");
                }
                else {
                    $('#startDate').val(start.format('MM/DD/YYYY'));
                    $('#endDate').val(end.format('MM/DD/YYYY'));
                }
            });

            $('body').on('click', 'a.deleteRow', function () {
                return;
            });

            $.ajax({
                type: "GET",
                url: "/Specials/GetCosts/" + specialID,
                success: function ($result) {
                    $.each($result.Costs, function (index, cost) {
                        $.ajax({
                            type: "GET",
                            url: "/Houses/_CostEditorWithID/" + id,
                            async: false,
                            success: function ($result2) {
                                var toInject = $result2;
                                $('.costEditor').append(toInject);
                                $('.costEditor').find('.costEditorRow:last').show();

                                $('#' + id + ' .costName').val(cost.Name);
                                $('#' + id + ' .costAmount').val(cost.Amount);
                                $('#' + id + ' .costID').val(cost.ID);

                                if ($('#' + id + ' .freq-id').val() == "true") {
                                    var span = $('#' + id + '').find('.freq-toggle').find('span');
                                    span.attr('class', 'label label-success');
                                    span.text('Daily');
                                }

                                $('.costName').attr('readonly', true);
                                $('.deleteRow').addClass('disabled');

                                id++;
                            }
                        });
                    });
                }
            });
        });
    </script>
}
