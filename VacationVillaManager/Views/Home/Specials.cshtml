@model IEnumerable<Special>
@using VacationVillaManager.Models

@{
    ViewBag.Title = "Specials";
    Layout = "~/Views/Shared/_BootstrapLayout.public.cshtml";
    var side = 0;
    var houses = (List<House>)ViewData["Houses"];
}

<!--=== Breadcrumbs ===-->
<div class="breadcrumbs margin-bottom-20">
	<div class="container">
        <h1 class="pull-left">Specials</h1>
        <ul class="pull-right breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home") <span class="divider">/</span></li>
            <li class="active">Specials</li>
        </ul>
    </div><!--/container-->
</div><!--/breadcrumbs-->
<!--=== End Breadcrumbs ===-->

<!--=== Content Part ===-->
<div class="container">
    @foreach (House house in houses)
    {
        var areSpecials = false;
        if (side == 0)
        {
            @:<div class="row-fluid servive-block">
            @:    <div class="span6">
            @:        <div class="headline"><h3 style="margin-top: -15px;">@house.Name</h3></div>
            @:        <div class="specials-btn-link">@Html.ActionLink("View/Reserve Villa", "Details", "Houses", new { id = house.ID }, new { @class = "btn-u btn-u-small btn-specials" })</div>
            @:        <table class="table table-hover">
            @:            <thead>
            @:                <tr>
            @:                    <th>Applicable Dates</th>
            @:                    <th></th>
            @:                </tr>
            @:            </thead>
            @:            <tbody>
                            foreach (Special special in Model)
                            {
                                if (special.House.ID == house.ID)
                                {
                                    areSpecials = true;
                                    var tip = "<span class='tip'>Rate: ";
                                    
                                    if (special.Rate < house.Rate)
                                    {
                                        tip = tip + "<strike>$" + house.Rate + "</strike> $" + special.Rate;
                                    }
                                    else
                                    {
                                        tip = tip + "$" + house.Rate + "<br />";   
                                    }
                                    
                                    foreach (Cost specCost in special.Costs)
                                    {
                                        foreach (Cost houseCost in house.Costs)
                                        {
                                            if (specCost.Name.Equals(houseCost.Name))
                                            {
                                                if (specCost.Amount < houseCost.Amount)
                                                {
                                                    tip = tip + "<br />" + specCost.Name + ": <strike>$" + houseCost.Amount + "</strike> $" + specCost.Amount;   
                                                }   
                                                else
                                                {
                                                    tip = tip + "<br />" + houseCost.Name + ": $" + houseCost.Amount;   
                                                }
                                            }   
                                        }
                                    }
                                    
            @:                        <tr class="tip_trigger">
            @:                            <td>@special.StartDate.ToString("dd MMM yyyy") thru @special.EndDate.ToString("dd MMM yyyy")</td>
            @:                            <td><em>(Hover over for rate information)</em>@Html.Raw(tip)</td>
            @:                        </tr>   
                                }
                            }
                            if (!areSpecials)
                            {
            @:                    <tr>
            @:                        <td>No specials listed for this villa.</td>
            @:                    </tr>
                            }
            @:            </tbody>
            @:        </table>
            @:    </div>
                side++;
                
        }
        else if (side == 1)
        {
            @:    <div class="span6">
            @:        <div class="headline"><h3 style="margin-top: -15px;">@house.Name</h3></div>
            @:        <div class="specials-btn-link">@Html.ActionLink("View/Reserve Villa", "Details", "Houses", new { id = house.ID }, new { @class = "btn-u btn-u-small btn-specials" })</div>
            @:        <table class="table table-hover">
            @:            <thead>
            @:                <tr>
            @:                    <th>Applicable Dates</th>
            @:                    <th></th>
            @:                </tr>
            @:            </thead>
            @:            <tbody>
                            foreach (Special special in Model)
                            {
                                if (special.House.ID == house.ID)
                                {
                                    areSpecials = true;
                                    var tip = "<span class='tip'>Test</span>";
            @:                        <tr class="tip_trigger">
            @:                            <td>@special.StartDate.ToString("dd MMM yyyy") thru @special.EndDate.ToString("dd MMM yyyy")</td>
            @:                            <td><em>(Hover over for rate information)</em>@Html.Raw(tip)</td>
            @:                        </tr>   
                                }
                            }
                            if (!areSpecials)
                            {
            @:                    <tr>
            @:                        <td>No specials listed for this villa.</td>
            @:                    </tr>
                            }
            @:            </tbody>
            @:        </table>
            @:    </div>
            @:</div>
            side--;
        }
    }

    @if (side == 1)
    {
        @:</div>
    }
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            // Tooltips
            $('.tip_trigger').hover(function () {
                tip = $(this).find('.tip');
                tip.show(); //Show tooltip
            }, function () {
                tip.hide(); //Hide tooltip		  
            }).mousemove(function (e) {
                var mousex = e.pageX + 20; //Get X coodrinates
                var mousey = e.pageY + 20; //Get Y coordinates
                var tipWidth = tip.width(); //Find width of tooltip
                var tipHeight = tip.height(); //Find height of tooltip

                //Distance of element from the right edge of viewport
                var tipVisX = $(window).width() - (mousex + tipWidth);
                //Distance of element from the bottom of viewport
                var tipVisY = $(window).height() - (mousey + tipHeight);

                if (tipVisX < 20) { //If tooltip exceeds the X coordinate of viewport
                    mousex = e.pageX - tipWidth - 20;
                } if (tipVisY < 20) { //If tooltip exceeds the Y coordinate of viewport
                    mousey = e.pageY - tipHeight - 20;
                }
                tip.css({ top: mousey, left: mousex });
            });
        });
    </script>
}